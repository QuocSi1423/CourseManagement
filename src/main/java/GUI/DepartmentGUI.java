/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import javax.swing.table.*;

import java.awt.*;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JTable;
import DTO.DepartmentDTO;
import java.util.ArrayList;
import BUS.DepartmentBUS;
import DAL.DepartmentDAL;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.RowFilter;

/**
 *
 * @author nqk09
 */
public class DepartmentGUI extends javax.swing.JPanel {

    DepartmentDAL departmentDAL = new DepartmentDAL();
    DepartmentBUS departmentBUS = new DepartmentBUS(departmentDAL);
    ArrayList<DepartmentDTO> listDepartment = new ArrayList<>();
    int editID = 0;

    /**
     * Creates new form DepartmentGUI1
     */
    public DepartmentGUI() {
        initComponents();
        loadDataToTable();
        tableCustomizer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTextField_Department = new javax.swing.JTextField();
        jTextField_Budget = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton_Edit = new javax.swing.JButton();
        jButton_Add = new javax.swing.JButton();
        jButton_Delete = new javax.swing.JButton();
        jDateChooser_Date = new com.toedter.calendar.JDateChooser();
        jTextField_Admin = new javax.swing.JTextField();
        jTextField_Search = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Department = new javax.swing.JTable();

        jPanel1.setPreferredSize(new java.awt.Dimension(1306, 945));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setPreferredSize(new java.awt.Dimension(1252, 125));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jTextField_Department, new org.netbeans.lib.awtextra.AbsoluteConstraints(161, 16, 270, 40));
        jPanel2.add(jTextField_Budget, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 68, 270, 40));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Khoa");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 23, 82, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Ngân sách");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(64, 75, 82, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Trưởng khoa");
        jLabel3.setPreferredSize(new java.awt.Dimension(94, 40));
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(563, 14, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Ngày");
        jLabel4.setPreferredSize(new java.awt.Dimension(94, 40));
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(563, 66, -1, -1));

        jButton_Edit.setBackground(new java.awt.Color(18, 102, 52));
        jButton_Edit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton_Edit.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Edit.setText("Sửa");
        jButton_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EditActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(1057, 68, 70, 40));

        jButton_Add.setBackground(new java.awt.Color(0, 0, 204));
        jButton_Add.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton_Add.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/icons8-plus-18.png"))); // NOI18N
        jButton_Add.setText("Thêm");
        jButton_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Add, new org.netbeans.lib.awtextra.AbsoluteConstraints(1077, 14, 100, 40));

        jButton_Delete.setBackground(new java.awt.Color(250, 7, 7));
        jButton_Delete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton_Delete.setForeground(new java.awt.Color(255, 255, 255));
        jButton_Delete.setText("Xóa");
        jButton_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DeleteActionPerformed(evt);
            }
        });
        jPanel2.add(jButton_Delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1137, 68, 70, 40));
        jPanel2.add(jDateChooser_Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(674, 68, 270, 40));
        jPanel2.add(jTextField_Admin, new org.netbeans.lib.awtextra.AbsoluteConstraints(674, 14, 270, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 28, -1, -1));

        jTextField_Search.setBackground(new java.awt.Color(152, 162, 225));
        jTextField_Search.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField_Search.setForeground(new java.awt.Color(204, 204, 204));
        jTextField_Search.setText("Tìm kiếm");
        jTextField_Search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField_SearchFocusGained(evt);
            }
        });
        jTextField_Search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField_SearchKeyReleased(evt);
            }
        });
        jPanel1.add(jTextField_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 185, 346, 40));

        jTable_Department.setAutoCreateRowSorter(true);
        jTable_Department.setBackground(new java.awt.Color(255, 255, 255));
        jTable_Department.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jTable_Department.setForeground(new java.awt.Color(0, 0, 0));
        jTable_Department.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable_Department.setPreferredSize(new java.awt.Dimension(300, 600));
        jTable_Department.setRowHeight(40);
        jTable_Department.setShowGrid(true);
        jTable_Department.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_DepartmentMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Department);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 1250, 660));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1306, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 945, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EditActionPerformed
        if (editID == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn 1 hàng trong bảng để sửa!");
        } else {
            if (checkInput() == 1) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin!");
            } else if (checkInput() == 2) {
                JOptionPane.showMessageDialog(this, "ID của trưởng khoa và ngân sách phải là số!");
            } else {
                Date date = jDateChooser_Date.getDate();
                Instant instant = date.toInstant();
                LocalDateTime lcdate = instant.atZone(ZoneId.systemDefault()).toLocalDateTime();
                DepartmentDTO department = new DepartmentDTO(editID, jTextField_Department.getText(), Double.valueOf(jTextField_Budget.getText()), lcdate, Integer.parseInt(jTextField_Admin.getText()));
                if (departmentBUS.updateDepartment(department) > 0) {
                    JOptionPane.showMessageDialog(this, "Sửa thành công!");
                    loadDataToTable();
                    clearInput();
                    editID = 0;
                }
            }
        }
    }//GEN-LAST:event_jButton_EditActionPerformed

    private void jButton_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddActionPerformed
        if (checkInput() == 1) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin!");
        } else if (checkInput() == 2) {
            JOptionPane.showMessageDialog(this, "ID của trưởng khoa và ngân sách phải là số!");
        } else {
            int id = listDepartment.get(listDepartment.size() - 1).getDepartmentID() + 1;
            Date date = jDateChooser_Date.getDate();
            Instant instant = date.toInstant();
            LocalDateTime lcdate = instant.atZone(ZoneId.systemDefault()).toLocalDateTime();
            DepartmentDTO department = new DepartmentDTO(id, jTextField_Department.getText(), Double.valueOf(jTextField_Budget.getText()), lcdate, Integer.parseInt(jTextField_Admin.getText()));
            if (departmentBUS.createDepartment(department) > 0) {
                JOptionPane.showMessageDialog(this, "Thêm thành công!");
                loadDataToTable();
                clearInput();
            }
        }
    }//GEN-LAST:event_jButton_AddActionPerformed

    private void jButton_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DeleteActionPerformed
        clearInput();
    }//GEN-LAST:event_jButton_DeleteActionPerformed

    private void jTextField_SearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_SearchFocusGained
        if (jTextField_Search.getText().equals("Tìm kiếm")) {
            jTextField_Search.setText("");
            jTextField_Search.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_jTextField_SearchFocusGained

    private void jTextField_SearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_SearchKeyReleased
        DefaultTableModel model = (DefaultTableModel) jTable_Department.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(model);
        jTable_Department.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter("(?i)" + jTextField_Search.getText()));
    }//GEN-LAST:event_jTextField_SearchKeyReleased

    private void jTable_DepartmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_DepartmentMouseClicked
        int i = jTable_Department.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable_Department.getModel();
        editID = Integer.parseInt(model.getValueAt(i, 0).toString());
        jTextField_Department.setText(model.getValueAt(i, 1).toString());
        jTextField_Budget.setText(model.getValueAt(i, 2).toString());
        jTextField_Admin.setText(model.getValueAt(i, 3).toString());
        String str = model.getValueAt(i, 4).toString();
        SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
        Date date;
        try {
            date = formatter.parse(str);
            jDateChooser_Date.setDate(date);
        } catch (ParseException ex) {
            Logger.getLogger(DepartmentGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable_DepartmentMouseClicked
    private void deleteObj() {
        int i = jTable_Department.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) jTable_Department.getModel();
        int id = Integer.parseInt(model.getValueAt(i, 0).toString());
        int result = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa?", "Xóa Khoa", JOptionPane.YES_NO_OPTION);
        if (result == 0) {
            int delResult = departmentBUS.removeDepartment(id);
            if (delResult > 0) {
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
                loadDataToTable();
            }
        }
    }

    private void clearInput() {
        jTextField_Admin.setText("");
        jTextField_Budget.setText("");
        jTextField_Department.setText("");
        jDateChooser_Date.setCalendar(null);
    }

    private void loadDataToTable() {
        jTable_Department.setRowSelectionAllowed(true);
        jTable_Department.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        listDepartment = (ArrayList<DepartmentDTO>) departmentBUS.getAllDepartment();
        Collections.sort(listDepartment, Comparator.comparingInt(DepartmentDTO::getDepartmentID));
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public Class<?> getColumnClass(int column) {
                switch (column) {
                    case 5:
                        return Icon.class;
                    default:
                        return Object.class;
                }
            }
        };
        model.addColumn("ID");
        model.addColumn("Tên Khoa");
        model.addColumn("Ngân sách");
        model.addColumn("Trưởng Khoa");
        model.addColumn("Ngày");
        model.addColumn("Xóa");
        jTable_Department.setModel(model);
        for (DepartmentDTO departmentDTO : listDepartment) {
            LocalDateTime localDateTime = departmentDTO.getStartDate();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            String formattedDate = localDateTime.format(formatter);
            ImageIcon icon = new ImageIcon(getClass().getResource("/Icon/icons8-delete-24.png"));
            model.addRow(new Object[]{departmentDTO.getDepartmentID(), departmentDTO.getName(), departmentDTO.getBudget(), departmentDTO.getAdministrator(), formattedDate, icon});
        }
        jTable_Department.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                int row = jTable_Department.rowAtPoint(e.getPoint());
                int col = jTable_Department.columnAtPoint(e.getPoint());
                if (col == 5) {
                    deleteObj();
                }
            }
        });
    }

    private int checkInput() {
        if (jTextField_Admin.getText().isEmpty() || jTextField_Budget.getText().isEmpty() || jTextField_Department.getText().isEmpty() || ((JTextField) jDateChooser_Date.getDateEditor().getUiComponent()).getText().isEmpty()) {
            return 1;
        }
        if (!isNumber(jTextField_Admin.getText()) || !isNumber(jTextField_Budget.getText())) {
            return 2;
        }
        return 0;
    }

    public static boolean isNumber(String input) {
        try {
            Double.parseDouble(input);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }
        private void tableCustomizer() {
        JTableHeader header = jTable_Department.getTableHeader();
        header.setPreferredSize(new Dimension(header.getPreferredSize().width, 40));
        header.setFont(new Font("Segoe UI", Font.PLAIN, 16));
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                setBorder(BorderFactory.createLineBorder(Color.black));
                setHorizontalAlignment(JLabel.CENTER);
                return this;
            }
        };
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        jTable_Department.setDefaultRenderer(String.class, centerRenderer);
        headerRenderer.setBackground(Color.BLUE);
        headerRenderer.setForeground(Color.WHITE);
        for (int i = 0; i < jTable_Department.getModel().getColumnCount(); i++) {
            if (i == 0 || i == 5) {
                jTable_Department.getColumnModel().getColumn(i).setPreferredWidth(60);
            }
            jTable_Department.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Add;
    private javax.swing.JButton jButton_Delete;
    private javax.swing.JButton jButton_Edit;
    private com.toedter.calendar.JDateChooser jDateChooser_Date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Department;
    private javax.swing.JTextField jTextField_Admin;
    private javax.swing.JTextField jTextField_Budget;
    private javax.swing.JTextField jTextField_Department;
    private javax.swing.JTextField jTextField_Search;
    // End of variables declaration//GEN-END:variables
}
